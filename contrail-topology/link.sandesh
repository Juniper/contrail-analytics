/*
 * Copyright (c) 2014 Juniper Networks, Inc. All rights reserved.
 */

/**
 *  Definitions of structures added by contrail-topology that go into
 *  Physical Router UVE.
 */

namespace cpp prouter

enum RemoteType {
    VRouter = 0
    PRouter = 1
    BMS     = 2
}

const map<RemoteType, string> RemoteTypeMapNames = {
    RemoteType.VRouter      : "VRouter",
    RemoteType.PRouter      : "PRouter"
    RemoteType.BMS          : "BMS"
}

/**
 * Structure to represent a link between two objects [physical
 * router, physical server etc] in a physical topology
 */
struct LinkEntry {
    1: string remote_system_name
    2: string local_interface_name
    3: string remote_interface_name
    4: RemoteType type
    5: i32 local_interface_index
    6: i32 remote_interface_index
}

/**
 * Physical Router UVE data provided by contrail-topology. This
 * includes the neighbor links calculated using the SNMP data in the UVE.
 */
struct PRouterLinkEntry {
    1: string name (key="ObjectPRouter")
    2: optional bool deleted
    3: optional list<LinkEntry> link_table
}

/**
 * @description: Physical Router UVE data provided by contrail-topology.
 * @object: prouter
 */
uve sandesh PRouterLinkUVE {
    1: PRouterLinkEntry data
}

/**
 * Structure containing PRouter name and the corresponding interface name
 * for a given vrouter interface
 */
struct RemoteIfInfo {
    1: string remote_system_name
    2: string remote_if_name
}

/**
 * Structure containing map of vrouter L2 interfaces and its corresponding
 * remote system/interface information
 */
struct VRouterL2IfInfo {
    1: string name (key="ObjectVRouter")
    2: optional bool deleted
    3: optional map<string, RemoteIfInfo> if_info
}

/**
 * @description: UVE provides L2 interface information of a VRouter
 * @object: vrouter
 */
uve sandesh VRouterL2IfUVE {
    1: VRouterL2IfInfo data
}
