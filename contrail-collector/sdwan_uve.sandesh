/*
 * Copyright (c) 2017 Juniper Networks, Inc. All rights reserved.
 */

/**
 *  Definitions of structures added by structured syslog collector,
 *  related to data received in the syslogs from devices
 */

include "io/io.sandesh"
include "sandesh/library/common/sandesh_uve.sandesh"
include "database/gendb.sandesh"
include "database/cassandra/cql/cql.sandesh"
include "sandesh/library/common/derived_stats_results.sandesh"

/*
 * UVE definition for SDWAN metrics from structured syslog messages.
*/

struct SDWANMetrics_diff {
      1: optional u64                     session_duration
      2: optional u64                     session_count
      3: optional u64                     total_bytes
      4: optional u64                     input_bytes
      5: optional u64                     output_bytes
      6: optional u64                     total_pkts
      7: optional u64                     input_pkts
      8: optional u64                     output_pkts
      9: optional u64                     sla_violation_duration
     10: optional u64                     sla_violation_count
     11: optional u64                     session_switch_count
     12: optional u64                     jitter_violation_count
     13: optional u64                     rtt_violation_count
     14: optional u64                     pkt_loss_violation_count
     15: optional u64                     minor_alarms_raised
     16: optional u64                     major_alarms_raised
     17: optional u64                     critical_alarms_raised
     18: optional u64                     total_alarms_raised
     19: optional u64                     total_alarms_cleared
}

struct SDWANMetrics_dial {
      1: optional u64                     txbps
      2: optional u64                     rxbps
      3: optional u64                     rtt
      4: optional u64                     pkt_loss
      5: optional u64                     rtt_jitter
      6: optional u64                     egress_jitter
      7: optional u64                     ingress_jitter
      8: optional u64                     sampling_percentage
      9: optional u64                     score
}

struct SDWANMetrics_diff_P_ {
      1: optional SDWANMetrics_diff value (tags="")
      2: optional SDWANMetrics_diff staging
}

struct SDWANMetrics_dial_P_ {
      1: optional SDWANMetrics_dial value (tags="")
      2: optional SDWANMetrics_dial staging
}

/*  UVE key -> TENANT::SITE::DEVICE_ID
*   Eight maps:
*     1. app_metrics_diff_sla
*        TRAFFIC-TYPE(NESTED-APP:APP/APP-CATEGORY)::DEPARTMENT::SLA_PROFILE
*     2. app_metrics_dial_sla
*        TRAFFIC-TYPE(NESTED-APP:APP/APP-CATEGORY)::DEPARTMENT::SLA_PROFILE
*     3. app_metrics_diff_link
*        TRAFFIC-TYPE(NESTED-APP:APP/APP-CATEGORY)::DEPARTMENT::LINK
*     4. app_metrics_dial_link
*        TRAFFIC-TYPE(NESTED-APP:APP/APP-CATEGORY)::DEPARTMENT::LINK
*     5. app_metrics_diff_user
*        TRAFFIC-TYPE(NESTED-APP:APP/APP-CATEGORY)::DEPARTMENT::USER
*     6. app_metrics_dial_user
*        TRAFFIC-TYPE(NESTED-APP:APP/APP-CATEGORY)::DEPARTMENT::USER
*     7. link_metrics_diff_traffic_type
*        LINK::SLA_PROFILE::TRAFFIC_TYPE
*     8. link_metrics_dial_traffic_type
*        LINK::SLA_PROFILE::TRAFFIC_TYPE
*/

struct SDWANMetricsRecord {
    1: string                           name (key="ObjectCPETable")
    2: optional bool                    deleted

}(period="180")

uve sandesh SDWANMetrics {
     1: SDWANMetricsRecord              data;
}


/*  UVE key -> REGION::TENANT
*   Two maps:
*     1. tenant_metrics_diff_sla
*         key is => SITE::SLA_PROFILE::TRAFFIC_TYPE
*     2. tenant_metrics_dial_sla
*         key is => SITE::SLA_PROFILE::TRAFFIC_TYPE
*/
struct SDWANTenantMetricsRecord {
    1: string                           name (key="ObjectCPETable")
    2: optional bool                    deleted

}(period="180")

uve sandesh SDWANTenantMetrics {
     1: SDWANTenantMetricsRecord          data;
}
