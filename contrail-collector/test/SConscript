#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

# -*- mode: python; -*-

Import('AnalyticsEnv')

env = AnalyticsEnv.Clone()

env.Append(LIBS=['sandeshflow', 'task_test', 'net', 'gunit', 'boost_thread', 'pthread'])
env.Append(LIBPATH=[
	'#/build/lib',
	Dir(env['TOP']).abspath + '/base/test/',
	Dir('../../net'),
	])
env.Append(CPPPATH = ['#/'+Dir('.').path ,
                      env['TOP'],
                      env['TOP'] + '/io',
                      env['TOP'] + '/base/sandesh/'])

env_noWerror = env.Clone()
while env_noWerror['CCFLAGS'].count('-Werror') > 0:
    env_noWerror['CCFLAGS'].remove('-Werror')

env_noWerror_excep = env_noWerror.Clone()
env_noWerror_excep.CppEnableExceptions()

collector_uve_request_obj = env.Object('collector_uve_request_skeleton.o',
                                       '../collector_uve_request_skeleton.cpp')
sdwan_uve_request_obj = env.Object('sdwan_uve_request_skeleton.o',
                                       '../sdwan_uve_request_skeleton.cpp')
analytics_request_obj = env.Object('analytics_request_skeleton.o',
                                   '../analytics_request_skeleton.cpp')

stat_walker_test = env.UnitTest('stat_walker_test',
                              ['stat_walker_test.cc',
                               '../stat_walker.o'])
env.Alias('src/analytics:stat_walker_test', stat_walker_test)

viz_message_test = env.UnitTest('viz_message_test',
                              ['viz_message_test.cc',
                              '../viz_message.o']
                              )
env.Alias('src/analytics:viz_message_test', viz_message_test)

env_boost_no_unreach = env.Clone()
env_boost_no_unreach.AppendUnique(CCFLAGS='-DBOOST_NO_UNREACHABLE_RETURN_DETECTION')
syslog_test_obj = env_boost_no_unreach.Object('syslog_test.cc')
syslog_test = env.UnitTest('syslog_test',
                                  syslog_test_obj +
                                  [
                                  '../generator.o',
                                  '../collector.o',
                                  '../vizd_table_desc.o',
                                  '../viz_message.o',
                                  '../ruleeng.o',
                                  '../stat_walker.o',
                                  '../db_handler.o',
                                  '../usrdef_counters.o',
                                  '../analytics_types.o',
                                  '../analytics_html.o',
                                  '../parser_util.o',
                                  '../viz_constants.o',
                                  '../collector_uve_types.o',
                                  '../collector_uve_html.o',
                                  '../collector_uve_constants.o',
                                  '../buildinfo.o',
                                  '../options.o',
                                  '../config_client_collector.o',
                                  analytics_request_obj,
                                  collector_uve_request_obj,
                                  ])
env.Alias('src/analytics:syslog_test', syslog_test)

#ruleeng_test = env.UnitTest('ruleeng_test',
#                              AnalyticsEnv['ANALYTICS_SANDESH_GEN_OBJS'] + 
#                              ['ruleeng_test.cc',
#                              '../ruleeng.o',
#                              '../viz_message.o',
#                              '../viz_collector.o',
#                              '../collector.o',
#                              '../db_handler.o',
#                              '../OpServerProxy.o',
#                              ]
#                              )
#env.Alias('src/analytics:ruleeng_test', ruleeng_test)

db_handler_test_obj = env_noWerror_excep.Object('db_handler_test.o', 'db_handler_test.cc')
db_handler_test = env.UnitTest('db_handler_test',
                              AnalyticsEnv['ANALYTICS_VIZ_SANDESH_GEN_OBJS'] + 
                              [db_handler_test_obj,
                              '../db_handler.o',
                              '../usrdef_counters.o',
                              '../analytics_types.o',
                              '../analytics_html.o',
                              '../parser_util.o',
                              '../vizd_table_desc.o',
                              '../viz_message.o',
                              '../buildinfo.o',
                              '../options.o',
                              '../config_client_collector.o',
                              analytics_request_obj,
                              ]
                              )
env.Alias('src/analytics:db_handler_test', db_handler_test)

options_test = env.UnitTest('options_test',
                           AnalyticsEnv['ANALYTICS_VIZ_SANDESH_GEN_OBJS'] +
                           ['../buildinfo.o', 
                            '../options.o', 
                            'options_test.cc', 
                            '../db_handler.o',
                            '../usrdef_counters.o',
                            '../analytics_types.o',
                            '../analytics_html.o',
                            '../parser_util.o',
                            '../vizd_table_desc.o',
                            '../viz_message.o',
                            '../config_client_collector.o',
                            analytics_request_obj,
                            ]
                            )
env.Alias('src/contrail-analytics/contrail-collector:options_test', options_test)


structured_syslogEnv = env.Clone()
structured_syslog_test = structured_syslogEnv.UnitTest('structured_syslog_test',
                                  [
                                  'structured_syslog_test.cc',
                                  '../structured_syslog_server.o',
                                  '../syslog_collector.o',
                                  '../structured_syslog_kafka_forwarder.o',
                                  '../generator.o',
                                  '../collector.o',
                                  '../vizd_table_desc.o',
                                  '../viz_message.o',
                                  '../ruleeng.o',
                                  '../stat_walker.o',
                                  '../db_handler.o',
                                  '../usrdef_counters.o',
                                  '../structured_syslog_config.o',
                                  '../analytics_types.o',
                                  '../analytics_html.o',
                                  '../parser_util.o',
                                  '../viz_constants.o',
                                  '../collector_uve_types.o',
                                  '../collector_uve_html.o',
                                  '../collector_uve_constants.o',
                                  '../sdwan_uve_types.o',
                                  '../sdwan_uve_html.o',
                                  '../sdwan_uve_constants.o',
                                  '../buildinfo.o',
                                  '../options.o',
                                  '../config_client_collector.o',
                                  analytics_request_obj,
                                  sdwan_uve_request_obj,
                                  collector_uve_request_obj])
structured_syslogEnv.Alias('src/analytics:structured_syslog_test', structured_syslog_test)

generator_test_env = env.Clone()
generator_test = generator_test_env.UnitTest('generator_test',
                     ['generator_test.cc',
                      '../generator.o',
                      '../collector.o',
                      '../vizd_table_desc.o',
                      '../viz_message.o',
                      '../ruleeng.o',
                      '../stat_walker.o',
                      '../db_handler.o',
                      '../usrdef_counters.o',
                      '../analytics_types.o',
                      '../analytics_html.o',
                      '../parser_util.o',
                      '../viz_constants.o',
                      '../collector_uve_types.o',
                      '../collector_uve_html.o',
                      '../collector_uve_constants.o',
                      '../buildinfo.o',
                      '../options.o',
                      '../config_client_collector.o',
                      collector_uve_request_obj,
                      analytics_request_obj])
generator_test_env.Alias('src/analytics:generator_test', generator_test)

test_suite = [
               options_test,
               viz_message_test,
               stat_walker_test,
               structured_syslog_test,
               syslog_test,
               db_handler_test,
               generator_test,
             ]
test = env.TestSuite('analytics-test', test_suite)

env.Alias('src/contrail-analytics/contrail-collector:test', [
    test,
    'src/contrail-analytics/contrail-collector/ruleparser:test',
])

flaky_test_suite = [
]

flaky_test = env.TestSuite('analytics-flaky-test', flaky_test_suite)
env.Alias('src/contrail-analytics/contrail-collector:flaky-test', flaky_test)

Return('test_suite')
